{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","mainFeaturesPost","position","color","palette","common","white","marginBottom","backgroundSize","backgroundRepeat","backgroundPosition","overlay","top","bottom","left","right","backgroundColor","mainFeaturesPostContent","padding","marginTop","cardContent","cardGrid","cardMedia","paddingTop","cardActions","justifyContent","myIcons","cursor","cards","App","classes","React","useState","openMenu","setMenuOpen","anchorEl","setAnchorEl","value","setValue","open","setOpen","email","setemail","pass","setpass","emailError","setemailError","passError","setpassError","handleMenuClose","event","handleClose","console","log","AppBar","Container","fixed","Toolbar","IconButton","onClick","currentTarget","edge","aria-label","className","Popper","role","undefined","anchorOrigin","vertical","horizontal","transformOrigin","transition","disablePortal","TransitionProps","placement","Grow","style","Paper","ClickAwayListener","onClickAway","MenuList","autoFocusItem","id","MenuItem","Typography","variant","Box","mr","Button","Dialog","onClose","aria-labelledby","DialogTitle","DialogContent","DialogContentText","TextField","autoFocus","margin","label","defaultValue","type","fullWidth","onChange","target","onBlur","helperText","error","DialogActions","test","String","toLowerCase","validateEmail","values","alert","JSON","stringify","handleSendData","backgroundImage","Grid","container","item","md","gutterBottom","paragraph","mainContent","maxWidth","align","mainButtons","justify","map","card","xs","sm","Card","CardMedia","image","CardContent","CardActions","size","BottomNavigation","newValue","BottomNavigationAction","icon","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0725347a.chunk.js","sourcesContent":["import './App.css';\nimport React from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport {makeStyles} from \"@material-ui/core\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport LayersIcon from '@material-ui/icons/Layers';\nimport PlayCircleFilledIcon from '@material-ui/icons/PlayCircleFilled';\nimport BottomNavigation from \"@material-ui/core/BottomNavigation\";\nimport BottomNavigationAction from \"@material-ui/core/BottomNavigationAction\";\nimport RestoreIcon from '@material-ui/icons/Restore';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nimport FolderIcon from '@material-ui/icons/Folder';\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport TextField from \"@material-ui/core/TextField\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Popper from \"@material-ui/core/Popper\";\nimport Grow from \"@material-ui/core/Grow\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\nimport MenuList from \"@material-ui/core/MenuList\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1\n    },\n    menuButton: {\n        marginRight: theme.spacing(1),\n    },\n    title: {\n        flexGrow: 1\n    },\n    mainFeaturesPost: {\n        position: \"relative\",\n        color: theme.palette.common.white,\n        marginBottom: theme.spacing(4),\n        backgroundSize: \"cover\",\n        backgroundRepeat: \"no-repeat\",\n        backgroundPosition: \"center\",\n    },\n    overlay: {\n        position: \"absolute\",\n        top: \"0\",\n        bottom: \"0\",\n        left: \"0\",\n        right: \"0\",\n        backgroundColor: \"rgba(0,0,0,.3)\",\n    },\n    mainFeaturesPostContent: {\n        position: \"relative\",\n        padding: theme.spacing(6),\n        marginTop: theme.spacing(3)\n    },\n    cardContent: {\n        flexGrow: 1\n    },\n    cardGrid: {\n        marginTop: theme.spacing(4)\n    },\n    cardMedia: {\n        paddingTop: theme.spacing(30)\n    },\n    cardActions: {\n        justifyContent: \"space-around\"\n    },\n    myIcons: {\n        cursor: \"pointer\"\n    }\n}))\n\nconst cards = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n\nfunction App() {\n    const classes = useStyles()\n    const [openMenu, setMenuOpen] = React.useState(false);\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const [value, setValue] = React.useState(\"recents\")\n    const [open, setOpen] = React.useState(false);\n    const [email, setemail] = React.useState(null);\n    const [pass, setpass] = React.useState(null);\n    const [emailError, setemailError] = React.useState(null);\n    const [passError, setpassError] = React.useState(null);\n\n    const handleMenuOpen = (event) => {\n        setMenuOpen((openMenu) => !openMenu);\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleMenuClose = (event) => {\n\n        setMenuOpen(false);\n    }\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue)\n    }\n\n    const handleClickOpen = () => {\n        setOpen(true);\n        setemailError(null)\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const handleSendData = (email, pass) => {\n        let validateEmail = (email) => {\n            const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n            return re.test(String(email).toLowerCase());\n        }\n\n        if (email === null || email === \"\") {\n            setemailError({\n                helperText: \"Incorrect entry.\",\n                error: true\n            })\n        } else {\n            if (pass === null || pass === \"\") {\n                setpassError({\n                    helperText: \"Incorrect entry.\",\n                    error: true\n                })\n            } else {\n                if (validateEmail(email)) {\n                    let values = {email, pass}\n                    alert(\"SUCCESS! your data is correct\" + JSON.stringify(values, null, 2));\n                } else {\n                    setemailError({\n                        helperText: \"Incorrect entry.\",\n                        error: true\n                    })\n                }\n            }\n        }\n\n    }\n\n    const emailChange = (event) => {\n        setemail(event.target.value)\n        setemailError(false)\n    }\n\n    const passChange = (event) => {\n        setpass(event.target.value)\n        setpassError(false)\n    }\n\n    const passOnBlur = () => {\n        if (pass === null || pass === \"\") {\n            setpassError({\n                helperText: \"Incorrect entry.\",\n                error: true\n            })\n        }\n    }\n\n    const emailOnBlur = () => {\n        if (email === null || email === \"\") {\n            setemailError({\n                helperText: \"Incorrect entry.\",\n                error: true\n            })\n        }\n    }\n    console.log(openMenu)\n    return (\n\n        <>\n            <AppBar position={\"fixed\"}>\n                <Container fixed>\n                    <Toolbar>\n\n                        <IconButton onClick={handleMenuOpen} edge={\"start\"} color={\"inherit\"} aria-label={\"menu\"}\n                                    className={classes.menuButton}>\n                            <MenuIcon/>\n                        </IconButton>\n                        <Popper open={openMenu} role={undefined}\n                                anchorEl={anchorEl}\n                                anchorOrigin={{\n                                    vertical: 'bottom',\n                                    horizontal: 'left',\n                                }}\n                                transformOrigin={{\n                                    vertical: 'top',\n                                    horizontal: 'left',\n                                }}\n                                transition disablePortal>\n                            {({TransitionProps, placement}) => (\n                                <Grow\n                                    {...TransitionProps}\n                                    style={{transformOrigin: placement === 'bottom' ? 'center center' : 'center bottom'}}\n                                >\n                                    <Paper>\n                                        <ClickAwayListener onClickAway={handleMenuClose}>\n                                            <MenuList autoFocusItem={openMenu} id=\"menu-list-grow\">\n                                                <MenuItem onClick={handleMenuClose}>Item 1</MenuItem>\n                                                <MenuItem onClick={handleMenuClose}>Item 2</MenuItem>\n                                                <MenuItem onClick={handleMenuClose}>Item 3</MenuItem>\n                                                <MenuItem onClick={handleMenuClose}>Some Item 1</MenuItem>\n                                                <MenuItem onClick={handleMenuClose}>Some Item 2</MenuItem>\n                                                <MenuItem onClick={handleMenuClose}>Some Item 3</MenuItem>\n                                            </MenuList>\n                                        </ClickAwayListener>\n                                    </Paper>\n                                </Grow>\n                            )}\n                        </Popper>\n\n\n                        <Typography variant={\"h6\"} className={classes.title}>Web Developer Material UI</Typography>\n                        <Box mr={3}>\n                            <Button color={\"inherit\"} variant={\"outlined\"} onClick={handleClickOpen}>Log In</Button>\n                            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n                                <DialogTitle id=\"form-dialog-title\">Log in</DialogTitle>\n                                <DialogContent>\n                                    <DialogContentText>Log in to see videos</DialogContentText>\n                                    <TextField\n                                        autoFocus\n                                        margin=\"dense\"\n                                        id=\"name\"\n                                        label=\"Email Address\"\n                                        defaultValue={email}\n                                        variant={\"outlined\"}\n                                        {...emailError}\n                                        type=\"email\"\n                                        fullWidth\n                                        onChange={emailChange}\n                                        onBlur={emailOnBlur}\n                                    />\n                                    <TextField\n                                        margin=\"dense\"\n                                        id=\"pass\"\n                                        label=\"Password\"\n                                        type=\"password\"\n                                        defaultValue={pass}\n                                        variant={\"outlined\"}\n                                        {...passError}\n                                        fullWidth\n                                        onChange={passChange}\n                                        onBlur={passOnBlur}\n                                    />\n                                </DialogContent>\n                                <DialogActions>\n                                    <Button onClick={handleClose} color=\"primary\">\n                                        Cancel\n                                    </Button>\n                                    <Button onClick={() => {\n                                        handleSendData(email, pass)\n                                    }} color=\"primary\">\n                                        Subscribe\n                                    </Button>\n                                </DialogActions>\n                            </Dialog>\n                        </Box>\n                        <Button color={\"secondary\"} variant={\"contained\"}>Sign Up</Button>\n                    </Toolbar>\n                </Container>\n            </AppBar>\n\n            <main>\n                <Paper className={classes.mainFeaturesPost}\n                       style={{backgroundImage: `url(https://source.unsplash.com/random)`}}>\n                    <Container fixed>\n                        <div className={classes.overlay}/>\n                        <Grid container>\n                            <Grid item md={6}>\n                                <div className={classes.mainFeaturesPostContent}>\n                                    <Typography variant={\"h5\"} color={\"inherit\"} gutterBottom>\n                                        Web Developer Material UI\n                                    </Typography>\n                                    <Typography variant={\"h6\"} color={\"inherit\"} paragraph>\n                                        Lorem ipsum dolor sit amet, consectetur adipisicing elit. Adipisci, asperiores\n                                        cum debitis deserunt dolores dolorum itaque nihil nobis quibusdam quo. Ab\n                                        architecto asperiores cumque esse fuga, magni suscipit temporibus voluptates?\n                                    </Typography>\n                                    <Button color={\"secondary\"} variant={\"contained\"}>Learn more</Button>\n                                </div>\n                            </Grid>\n                        </Grid>\n                    </Container>\n                </Paper>\n                <div className={classes.mainContent}>\n                    <Container maxWidth={\"md\"}>\n                        <Typography variant={\"h4\"} align={\"center\"} color={\"textPrimary\"} gutterBottom>\n                            My little site with Material UI components\n                        </Typography>\n                        <Typography variant={\"h6\"} align={\"center\"} color={\"textSecondary\"} paragraph>\n                            Lorem ipsum dolor sit amet, consectetur adipisicing elit. Amet dignissimos dolorem, dolores\n                            eveniet ipsa maiores maxime pariatur placeat quae quidem reiciendis rerum tempora ut velit\n                            vitae voluptas voluptates. Dolorum, nulla!\n                            Lorem ipsum dolor sit amet, consectetur adipisicing elit. Culpa eos nam numquam quam qui quo\n                            repudiandae sed. Assumenda eaque in incidunt nemo nihil, quas repellat, similique tempore\n                            ullam unde ut.\n                        </Typography>\n                        <div className={classes.mainButtons}>\n                            <Grid container spacing={2} justify={\"center\"}>\n                                <Grid item>\n                                    <Button color={\"primary\"} variant={\"contained\"}>Start now</Button>\n                                </Grid>\n                                <Grid item>\n                                    <Button color={\"primary\"} variant={\"outlined\"}>Learn more</Button>\n                                </Grid>\n                            </Grid>\n                        </div>\n                    </Container>\n                    <Container className={classes.cardGrid} maxWidth={\"md\"}>\n                        <Grid container spacing={4}>\n                            {cards.map((card) =>\n                                <Grid item key={card} xs={12} sm={6} md={4}>\n                                    <Card className={classes.card}>\n                                        <CardMedia className={classes.cardMedia}\n                                                   image={\"https://source.unsplash.com/random\"}\n                                                   title={\"Image title\"}/>\n                                        <CardContent className={classes.cardContent}>\n                                            <Typography variant={\"h5\"} gutterBottom>\n                                                Blog post\n                                            </Typography>\n                                            <Typography>\n                                                Lorem ipsum dolor sit amet, consectetur adipisicing elit. Accusamus,\n                                                animi assumenda consequuntur dolore facilis illum labore, laboriosam\n                                                magni minus nemo quia quisquam quod rem tempora tenetur totam ullam ut\n                                                veniam?\n                                            </Typography>\n                                        </CardContent>\n                                        <CardActions className={classes.cardActions}>\n                                            <Button size={\"small\"} color={\"primary\"} variant={\"outlined\"}>\n                                                View\n                                            </Button>\n                                            <Button size={\"small\"} color={\"primary\"} variant={\"outlined\"}>\n                                                Edit\n                                            </Button>\n                                            <LayersIcon className={classes.myIcons}/>\n                                            <PlayCircleFilledIcon className={classes.myIcons}/>\n                                        </CardActions>\n                                    </Card>\n                                </Grid>\n                            )}\n                        </Grid>\n                    </Container>\n                </div>\n            </main>\n            <footer>\n                <Typography variant={\"h5\"} align={\"center\"} gutterBottom>\n                    Footer\n                </Typography>\n                <BottomNavigation\n                    value={value}\n                    onChange={handleChange}\n                    className={classes.root}\n                >\n                    <BottomNavigationAction\n                        label={\"Recents\"}\n                        value={\"recents\"}\n                        icon={<RestoreIcon/>}\n                    />\n                    <BottomNavigationAction\n                        label={\"Favorites\"}\n                        value={\"favorites\"}\n                        icon={<FavoriteIcon/>}\n                    />\n                    <BottomNavigationAction\n                        label={\"Nearby\"}\n                        value={\"nearby\"}\n                        icon={<LocationOnIcon/>}\n                    />\n                    <BottomNavigationAction\n                        label={\"Folder\"}\n                        value={\"folder\"}\n                        icon={<FolderIcon/>}\n                    />\n                </BottomNavigation>\n                <Typography align={\"center\"} color={\"textSecondary\"} component={\"p\"} variant={\"subtitle1\"}>\n                    Lorem ipsum dolor sit amet, consectetur adipisicing elit. Deserunt facilis nobis quia. Asperiores\n                    eligendi error ex excepturi facilis hic, id, impedit labore pariatur perferendis placeat sed, vel\n                    vitae voluptates voluptatum.\n                </Typography>\n            </footer>\n        </>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}